clear;
clc;

load('.\real data\data.mat');

lambda = 0.336845458426966;  % wave length
sigma = 0.1;   % variance of white noise
C0 = 0.8;
B = 2e6;    % bandwidth  

for theta_update = 1 : 10
    for theta_i_one_update = 1 : 3
        r0_angle = directions(theta_update,theta_i_one_update);  % the target direction in current beamforming
        r0 = ()
        
        p = xyz;  % location of 19 antennas on the BS

        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%%%%%% matched beamforming weights %%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        w = zeros(size(p,1), 1);
        for i = 1 : size(p,1)
            w(i) =  exp(-1i * 2*pi * dot(p(i,:), r0) / lambda);
        end

        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%%%%%% beam shape for matched beamforming %%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        N = size(src_model,1);  % number of users
        r = src_model(:,1:2);  % position of the users

        b = zeros(N, 1); % beam shape
        b_gain = zeros(N, 1);  % gain of each antenna
        for j = 1 : N
            for i = 1 : 96
                b(j) = b(j) + w(i) * exp(1i * 2*pi * norm(p(i,:) - r(j,:)) / lambda);
            end
            b_gain(j) = abs(b(j));
        end

        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %%%%%% calculate data rate by AWGN channel %%%%%%%%%%%%%%
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        R_sample = zeros(N, 1);  % SNR of each sample
        for i = 1 : N
            R_sample(i) = B * log2(1 + (b_gain(i) / sigma) * C0);
        end
        R_aver = mean(R_sample,'all'); % calculate the average
    end
end
